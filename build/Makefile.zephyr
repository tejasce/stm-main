ifdef ZEPHYR_APP

# Override to use appropriate $(OBJDIR) location (toolchain is already selected by buildenv)
$(eval $(call inc_toolchain,firmware))

# Use arm-none-eabi- toolchain to build firmware unless explictly specified
# in product makefile as one or more space sparated BASH key=val
ifeq ($(ZEPHYR_TOOLCHAIN_ARGS),)
ZEPHYR_TOOLCHAIN_ARGS := ZEPHYR_TOOLCHAIN_VARIANT=cross-compile
ZEPHYR_TOOLCHAIN_ARGS += CROSS_COMPILE=/usr/bin/arm-none-eabi-
endif

# This file defines rules for targets: [all|clean].$(PRODUCT)
PRODUCT := $(ZEPHYR_APP)
# For top Makefile
PRODUCTS += $(PRODUCT)
PRODUCT_OBJDIR := $(OBJDIR)/$(PRODIR)
BOARD_PRODUCT_OBJDIR := $(PRODUCT_OBJDIR)/$(BOARD)

# For top Makefile
OBJ_SUBDIRS += $(BOARD_PRODUCT_OBJDIR)

# Location of built file. Same location also has .bin, .hex and .map files.
# But since same instance of $(WEST) generates all, use only .elf file as target.
ELF := $(BOARD_PRODUCT_OBJDIR)/zephyr/zephyr.elf

# List of files as dependency to build $(ELF)
ZEPHYR_APP_DEP_FILES := $(shell find $(PRODIR) -name "*.[c|h]" -o -name "*.proto" -o -name "CMakeLists.txt" -o -name "prj.conf")

$(ELF):: BOARD := $(BOARD)
$(ELF):: PRODIR := $(PRODIR)
$(ELF):: BOARD_PRODUCT_OBJDIR := $(BOARD_PRODUCT_OBJDIR)
$(ELF):: BUILD_LOG := $(BOARD_PRODUCT_OBJDIR)/build.log
$(ELF):: ZEPHYR_TOOLCHAIN_ARGS := $(ZEPHYR_TOOLCHAIN_ARGS)
$(ELF): $(ZEPHYR_APP_DEP_FILES) | $(BOARD_PRODUCT_OBJDIR)
	@printf "%$(PCOL)s %s\n" "[WEST]" $@ && \
		printf "%$(PCOL)s %s %s\n" "" "Logs:" $(BUILD_LOG)
	$(Q)ZEPHYR_BASE=$(ZEPHYR_HOME)/zephyr $(ZEPHYR_TOOLCHAIN_ARGS) $(WEST) build $(PRODIR) -b $(BOARD) --build-dir $(realpath $(BOARD_PRODUCT_OBJDIR)) > $(BUILD_LOG) 2>&1 || { tail -n 40 $(BUILD_LOG); exit 1; }

all.$(PRODUCT): $(ELF)

clean.$(PRODUCT):: PRODUCT_OBJDIR := $(PRODUCT_OBJDIR)
clean.$(PRODUCT):: BOARD_PRODUCT_OBJDIR := $(BOARD_PRODUCT_OBJDIR)
clean.$(PRODUCT):
	@printf "%$(PCOL)s %s\n" "[RM]" $(BOARD_PRODUCT_OBJDIR)
	$(Q)rm -rf $(BOARD_PRODUCT_OBJDIR)
	$(Q)rmdir $(PRODUCT_OBJDIR) 2>/dev/null || true

endif  # ifdef ZEPHYR_APP
