ifdef PROTO_LIB

# This file defines rules for targets: [all|clean].$(PRODUCT)
PRODUCT := $(PROTO_LIB)
# For top Makefile
PRODUCTS += $(PRODUCT)

PRODUCT_OBJDIR := $(OBJDIR)/$(PRODIR)

CC_PROTO_TGT_DIR := $(PRODUCT_OBJDIR)

LIB_SO := $(CC_PROTO_TGT_DIR)/lib$(PROTO_LIB).so
LIB_AR := $(LIB_SO:%.so=%.a)

PB_CC_OBJS := $(PB_SRCS:%.proto=$(CC_PROTO_TGT_DIR)/%.pb.o)

CFLAGS += -fPIC $(PROTOBUF_CFLAGS)
LFLAGS += -shared $(PROTOBUF_LFLAGS)
CXXFLAGS += --std=c++17

$(CC_PROTO_TGT_DIR):
	$(Q)mkdir -p $@

define pb_cc_obj_tgt

PB_CC_FILE := $(CC_PROTO_TGT_DIR)/$(1:%.proto=%.pb.cc)
PB_O_FILE := $$(PB_CC_FILE:%.cc=%.o)

$$(PB_CC_FILE): $(PRODIR)/$(1) | $(CC_PROTO_TGT_DIR)
	$(Q)$(PROTOC) -I $(PRODIR) $$^ --cpp_out=$(CC_PROTO_TGT_DIR)

$$(PB_O_FILE):: CXX := $$(CXX)
$$(PB_O_FILE):: CFLAGS := $$(CFLAGS)
$$(PB_O_FILE):: CXXFLAGS := $$(CXXFLAGS)
$$(PB_O_FILE):: CC_PROTO_TGT_DIR := $$(CC_PROTO_TGT_DIR)
$$(PB_O_FILE): $$(PB_CC_FILE)
	$(Q)$(CXX) $(CFLAGS) $(CXXFLAGS) -I $(CC_PROTO_TGT_DIR) -c $$^ -o $$@
endef
$(foreach pb_src,$(PB_SRCS),$(eval $(call pb_cc_obj_tgt,$(pb_src))))

# Build dep .so first
$(LIB_SO): $(PB_CC_OBJS)
	@echo "Creating $@"
	$(Q)$(CXX) $(LFLAGS) -o $@ $(filter-out $(CC_H_EXTS_PATT),$^)

# Build dep .a first
$(LIB_AR): $(PB_CC_OBJS)
	@echo "Creating $@"
	$(Q)$(AR) -c -r -s -o $@ $(filter-out $(CC_H_EXTS_PATT),$^)

all.$(PRODUCT): $(LIB_SO) $(LIB_AR)

clean.$(PRODUCT):
	@echo "Removing $(PRODUCT_OBJDIR)"
	$(Q)rm -rf $(PRODUCT_OBJDIR)

# Preserve target specific values of [applicable] variables
$(LIB_SO) $(LIB_AR):: CXX := $(CXX)
$(LIB_SO) $(LIB_AR):: AR := $(AR)
$(LIB_SO) $(LIB_AR):: CFLAGS := $(CFLAGS)
$(LIB_SO) $(LIB_AR):: LFLAGS := $(LFLAGS)
$(LIB_SO) $(LIB_AR):: CXXFLAGS := $(CXXFLAGS)
clean.$(PRODUCT):: PRODUCT_OBJDIR := $(PRODUCT_OBJDIR)

endif
