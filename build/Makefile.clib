ifdef C_LIB

# This file defines rules for targets: [all|clean].$(PRODUCT)

PRODUCT_OBJDIR := $(OBJDIR)/$(PRODIR)

LIB_SO := $(PRODUCT_OBJDIR)/lib$(C_LIB).so
LIB_AR := $(LIB_SO:%.so=%.a)

H_INCS := $(H_DIRS:%=-I$(PRODIR)/%)
C_OBJS := $(patsubst %.c,$(OBJDIR)/$(PRODIR)/%.o,$(filter %.c,$(C_SRCS)))
$(foreach cc_ext_patt,$(CC_EXTS_PATT),$(eval C_OBJS += $(patsubst $(cc_ext_patt),$(OBJDIR)/$(PRODIR)/%.o,$(filter $(cc_ext_patt),$(C_SRCS)))))
APIHDR :=

# For top Makefile
OBJ_SUBDIRS += $(sort $(dir $(C_OBJS)) $(PRODUCT_OBJDIR))

# Dependency target, includes and LD paths (e.g. path/to/libdir:<C_LIB>)
$(eval $(call eval_clib_deps))

CFLAGS += $(GLOBAL_CFLAGS) -fPIC
CFLAGS += -I$(PRODUCT_OBJDIR)
CFLAGS += $(H_INCS)
CFLAGS += $(DEPINC)
LFLAGS += -shared
LFLAGS += $(DEP_LD)
CXXFLAGS += $(GLOBAL_CXXFLAGS)

# Add targets for each .o file
$(eval $(call add_c_obj_tgts,$(C_SRCS:%=$(PRODIR)/%)))

# Add targets to detect change in C flags (after add_c_obj_tgts() as it changes flags)
$(eval $(call cflags_change_tgt,clib,$(C_LIB)))

# Create symllink to each include header in target obj directory
# Determine if include_prefix should be stripped and/or added
define HDR_SYMLINK_TGT
HDR := $(1)
ifneq ($(STRIP_INC_PREFIX),)
STRIP_INC_PREFIX := $$(STRIP_INC_PREFIX:%/=%)
HDR := $$(subst $$(STRIP_INC_PREFIX)/,,$$(HDR))
endif
ifneq ($(INC_PREFIX),)
INC_PREFIX := $$(INC_PREFIX:%/=%)
HDR := $$(HDR:%=$$(INC_PREFIX)/%)
endif
TGT_IHDR := $$(HDR:%=$$(OBJDIR)/$$(PRODIR)/%)
APIHDR += $$(TGT_IHDR)
$$(TGT_IHDR): $(PRODIR)/$(1)
	$(Q)mkdir -p $$(@D)
	$(Q)ln -sf $(abspath $$<) $(abspath $$@)
endef
$(foreach hdr,$(I_HDRS),$(eval $(call HDR_SYMLINK_TGT,$(hdr))))

# Build dep .so first
$(LIB_SO):: CXX := $(CXX)
$(LIB_SO):: LFLAGS := $(LFLAGS)
$(LIB_SO): $(DEP_SO) $(APIHDR) $(C_OBJS)
	@printf "%$(PCOL)s %s\n" "[CXXLD]" $@
	$(Q)$(CXX) $(LFLAGS) -o $@ $(filter-out $(CC_H_EXTS_PATT),$^)

# Build dep .a first
$(LIB_AR):: AR := $(AR)
$(LIB_AR): $(DEP_AR) $(APIHDR) $(C_OBJS)
	@printf "%$(PCOL)s %s\n" "[AR]" $@
	$(Q)$(AR) -c -r -s -o $@ $(filter-out $(CC_H_EXTS_PATT),$^)

all.$(PRODUCT): $(LIB_SO) $(LIB_AR)

clean.$(PRODUCT):: LIB_SO := $(LIB_SO)
clean.$(PRODUCT):: LIB_AR := $(LIB_AR)
clean.$(PRODUCT):: APIHDR := $(APIHDR)
clean.$(PRODUCT):: C_OBJS := $(C_OBJS)
clean.$(PRODUCT):: PRODUCT_OBJDIR := $(PRODUCT_OBJDIR)
clean.$(PRODUCT):: INC_PREFIX := $(PRODUCT_OBJDIR)/$(INC_PREFIX)
clean.$(PRODUCT):: METADATA_FILE := $(METADATA_FILE)
clean.$(PRODUCT):
	@printf "%$(PCOL)s %s\n" "[RM]" "$(LIB_SO)|.a"
	$(Q)rm -f $(LIB_SO) $(LIB_AR) $(APIHDR) $(C_OBJS) $(C_OBJS:%.o=%.d) $(METADATA_FILE)
	$(Q)$(call del_empty_dirs,$(PRODUCT_OBJDIR))

endif  # define C_LIB
