ifdef C_LIB

# This file defines rules for targets: [all|clean].$(PRODUCT)
PRODUCT := $(C_LIB)
# For top Makefile
PRODUCTS += $(PRODUCT)

PRODUCT_OBJDIR := $(OBJDIR)/$(PRODIR)

LIB_SO := $(PRODUCT_OBJDIR)/lib$(C_LIB).so
LIB_AR := $(LIB_SO:%.so=%.a)

H_INCS := $(H_DIRS:%=-I$(PRODIR)/%)
C_OBJS := $(C_SRCS:%.c=$(OBJDIR)/$(PRODIR)/%.o)
APIHDR := $(I_HDRS:%=$(OBJDIR)/$(PRODIR)/%)

# For top Makefile
OBJ_SUBDIRS += $(sort $(dir $(C_OBJS)))

# Dependency target, includes and LD paths (e.g. path/to/libdir:<C_LIB>)
$(eval $(call eval_clib_deps))

CFLAGS += -Wall -g -O3 -fPIC
CFLAGS += $(H_INCS)
CFLAGS += $(DEPINC)
LFLAGS += -shared
LFLAGS += $(DEP_LD)

# Add targets for each .o file
$(eval $(call add_c_obj_tgts,$(C_OBJS)))

# Build dep .so first
$(LIB_SO): $(DEP_SO) $(C_OBJS) | $(APIHDR)
	@echo "Creating $@"
	$(Q)$(CC) $(LFLAGS) -o $@ $^

# Build dep .a first
$(LIB_AR): $(DEP_AR) $(C_OBJS) | $(APIHDR)
	@echo "Creating $@"
	$(Q)$(AR) -c -r -s -o $@ $^

# Create symllink to each include header in target obj directory
$(sort $(dir $(APIHDR))):
	$(Q)mkdir -p $@
define HDR_SYMLINK_TGT
$(1): $(subst $(OBJDIR)/,,$(1)) | $(dir $(1))
	$(Q)ln -sf $(abspath $$<) $(abspath $$@)
endef
$(foreach hdr,$(APIHDR),$(eval $(call HDR_SYMLINK_TGT,$(hdr))))

all.$(PRODUCT): $(LIB_SO) $(LIB_AR)

clean.$(PRODUCT):
	@echo "Removing $(PRODUCT_OBJDIR)"
	$(Q)rm -rf $(PRODUCT_OBJDIR)

# Preserve target specific values of [applicable] variables
$(LIB_SO) $(LIB_AR):: CC := $(CC)
$(LIB_SO) $(LIB_AR):: AR := $(AR)
$(LIB_SO) $(LIB_AR):: CFLAGS := $(CFLAGS)
$(LIB_SO) $(LIB_AR):: LFLAGS := $(LFLAGS)
clean.$(PRODUCT):: PRODUCT_OBJDIR := $(PRODUCT_OBJDIR)

endif  # define C_LIB
