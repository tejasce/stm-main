ifdef C_BIN

# This file defines rules for targets: [all|clean].$(PRODUCT)
PRODUCT := $(C_BIN)
# For top Makefile
PRODUCTS += $(PRODUCT)

OBJDIR := objs.$(TARGET_ARCH)
PRODUCT_OBJDIR := $(OBJDIR)/$(PRODIR)
# For top Makefile
OBJDIRS += $(OBJDIR)

BINELF := $(PRODUCT_OBJDIR)/$(C_BIN)

H_INCS := $(H_DIRS:%=-I$(PRODIR)/%)
C_OBJS := $(C_SRCS:%.c=$(OBJDIR)/$(PRODIR)/%.o)

# For top Makefile
OBJ_SUBDIRS += $(sort $(dir $(C_OBJS)))

# Dependency target, includes and LD paths (e.g. path/to/libdir:<C_BIN>)
DEPDIR := $(foreach dep,$(DEPEND),$(firstword $(subst :, ,$(dep))))
DEPTGT := $(foreach dep,$(DEPEND),$(lastword $(subst :, ,$(dep))))
DEP_SO := $(foreach dep,$(DEPEND),$(patsubst %,$(OBJDIR)/%.so,$(subst :,/lib,$(dep))))
DEP_AR := $(DEP_SO:%.so=%.a)
DEPINC := $(DEPDIR:%=-I$(OBJDIR)/%)
DEP_LD := $(DEPDIR:%=-L$(OBJDIR)/%)
DEP_LD += $(DEPTGT:%=-l:lib%.a)

CFLAGS += -Wall -g -O3
CFLAGS += $(H_INCS)
CFLAGS += $(DEPINC)
LFLAGS += $(DEP_LD)

# Add targets for each .o file
$(eval $(call add_c_obj_tgts,$(C_OBJS)))

# Build dep .a first but omit those files while linking
$(BINELF): $(DEP_AR) $(C_OBJS)
	@echo "Creating $@"
	$(Q)$(CC) -o $@ $(filter %.o,$^) $(LFLAGS)

all.$(PRODUCT): $(BINELF)

clean.$(PRODUCT):
	@echo "Removing $(PRODUCT_OBJDIR)"
	$(Q)rm -rf $(PRODUCT_OBJDIR)

# Preserve target specific values of [applicable] variables
$(BINELF):: CC := $(CC)
$(BINELF):: CFLAGS := $(CFLAGS)
$(BINELF):: LFLAGS := $(LFLAGS)
clean.$(PRODUCT):: PRODUCT_OBJDIR := $(PRODUCT_OBJDIR)

endif  # define C_BIN
