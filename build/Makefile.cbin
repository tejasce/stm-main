ifdef C_BIN

# This file defines rules for targets: [all|clean].$(PRODUCT)

PRODUCT_OBJDIR := $(OBJDIR)/$(PRODIR)

BINELF := $(PRODUCT_OBJDIR)/$(C_BIN)

H_INCS := $(H_DIRS:%=-I$(PRODIR)/%)
C_OBJS := $(patsubst %.c,$(OBJDIR)/$(PRODIR)/%.o,$(filter %.c,$(C_SRCS)))
$(foreach cc_ext_patt,$(CC_EXTS_PATT),$(eval C_OBJS += $(patsubst $(cc_ext_patt),$(OBJDIR)/$(PRODIR)/%.o,$(filter $(cc_ext_patt),$(C_SRCS)))))

# For top Makefile
OBJ_SUBDIRS += $(sort $(dir $(C_OBJS)) $(PRODUCT_OBJDIR))

# Dependency target, includes and LD paths (e.g. path/to/libdir:<C_LIB>)
$(eval $(call eval_clib_deps))

CFLAGS += $(GLOBAL_CFLAGS)
CFLAGS += $(H_INCS)
CFLAGS += $(DEPINC)
LFLAGS += -static
LFLAGS += $(DEP_LD)
CXXFLAGS += $(GLOBAL_CXXFLAGS)

# Add targets for each .o file
$(eval $(call add_c_obj_tgts,$(C_SRCS:%=$(PRODIR)/%)))

# Add targets to detect change in C flags (after add_c_obj_tgts() as it changes flags)
$(eval $(call cflags_change_tgt,cbin,$(C_BIN)))

# Build dep .a first but omit those files while linking
$(BINELF):: CXX := $(CXX)
$(BINELF):: LFLAGS := $(LFLAGS)
$(BINELF): $(DEP_AR) $(C_OBJS)
	@printf "%$(PCOL)s %s\n" "[CXXLD]" $@
	$(Q)$(CXX) -o $@ $(filter %.o,$^) $(LFLAGS)

all.$(PRODUCT): $(BINELF)

clean.$(PRODUCT):: BINELF := $(BINELF)
clean.$(PRODUCT):: C_OBJS := $(C_OBJS)
clean.$(PRODUCT):: PRODUCT_OBJDIR := $(PRODUCT_OBJDIR)
clean.$(PRODUCT):: METADATA_FILE := $(METADATA_FILE)
clean.$(PRODUCT):
	@printf "%$(PCOL)s %s\n" "[RM]" $(BINELF)
	$(Q)rm -f $(BINELF) $(C_OBJS) $(C_OBJS:%.o=%.d) $(METADATA_FILE)
	$(Q)$(call del_empty_dirs,$(PRODUCT_OBJDIR))

endif  # define C_BIN
